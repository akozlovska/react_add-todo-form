{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","todoUser","usersFromServer","find","cn","TodoList","todos","map","getValidatedTitle","titleRegex","validatedTitle","test","replace","App","useState","todosFromServer","currentTodos","setCurrentTodos","setTitle","setUserId","isUserSelected","setIsUserSelected","hasTitle","setHasTitle","action","method","onSubmit","e","preventDefault","newTodo","Math","max","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.982d40bc.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo button is-info is-small is-light\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const todoUser = usersFromServer.find(user => user.id === todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo Todo__item box', {\n        'TodoInfo--completed has-background-primary-light': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title subtitle\">\n        {todo.title}\n      </h2>\n\n      {todoUser && (\n        <UserInfo user={todoUser} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section>\n      <h1 className=\"Todo__title title\">Todo list</h1>\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getNewId(todos: Todo[]) {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nfunction getValidatedTitle(title: string) {\n  const titleRegex = /[^a-zа-я0-9 ]*/gi;\n  let validatedTitle = title;\n\n  if (titleRegex.test(title)) {\n    validatedTitle = validatedTitle.replace(titleRegex, '');\n  }\n\n  return validatedTitle;\n}\n\nexport const App = () => {\n  const [currentTodos, setCurrentTodos] = useState<Todo[]>(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [isUserSelected, setIsUserSelected] = useState(true);\n  const [hasTitle, setHasTitle] = useState(true);\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitle(true);\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setIsUserSelected(true);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!userId) {\n      setIsUserSelected(false);\n    }\n\n    if (!title) {\n      setHasTitle(false);\n    }\n\n    if (userId && title) {\n      const newTodo = {\n        id: getNewId(currentTodos),\n        title: getValidatedTitle(title),\n        userId,\n        completed: false,\n      };\n\n      setCurrentTodos(prevTodos => [...prevTodos, newTodo]);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App Todo\">\n      <h1 className=\"Todo__title title\">Add todo form</h1>\n\n      <form\n        className=\"Todo__form\"\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"title\"> Title </label>\n          <input\n            className=\"input\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {!hasTitle && (\n            <p className=\"error help is-danger\">Please enter a title</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user\">User</label>\n          <div className=\"select\">\n            <select\n              data-cy=\"userSelect\"\n              id=\"user\"\n              name=\"user\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </div>\n\n          {!isUserSelected && (\n            <p className=\"error help is-danger\"> Please choose a user </p>\n          )}\n\n        </div>\n\n        <button\n          className=\"button is-link\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}